{
	"Campus": "Kent",
	"CourseInventory": [
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "10051",
         "CourseShortTitle": "INTRO TO COMPUTER SCIENCE",
         "CourseLongTitle": "INTRO TO COMPUTER SCIENCE",
         "CourseDescription": "An introductory, broad and hands-on coverage of aspects of computer science, including algorithms, problem solving, operating systems concepts, computer architecture, programming languages and modern applications. Three-credit lecture with one-credit lab. Prerequisite: none.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "4",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "10061",
         "CourseShortTitle": "INTRO TO COMPUTER PROG",
         "CourseLongTitle": "INTRO TO COMPUTER PROG",
         "CourseDescription": "Emphasizes programming in a high-level language, includes structured programming, program design, expressions, data control, arrays, records, strings and functions. Prerequisite: MATH 11009 or 11010; or minimum SAT 480/ACT 20 and Compass Algebra score of 55; or minimum SAT 620/ACT 26 and Compass Algebra score of 36.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "13001",
         "CourseShortTitle": "CS I PROGRAM/PROBLEM SOLVING",
         "CourseLongTitle": "CS I PROGRAM/PROBLEM SOLVING",
         "CourseDescription": "Computer science concepts including algorithm development and problem solving strategies focused on procedural abstraction. High-level programming concepts including data types, expressions, program structures, functions, parameter passing, scope, extent, arrays, introduction to recursion and an introduction to object oriented-concepts. Prerequisite: MATH 11010 or MATH 12001 with a minimum grade of C (2.000).",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "4",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "13011",
         "CourseShortTitle": "CS IA PROCEDURAL PROGRAMMING",
         "CourseLongTitle": "CS IA PROCEDURAL PROGRAMMING",
         "CourseDescription": "Computer science concepts including algorithm development and problem solving strategies focused on programming abstractions. High-level programming concepts including variables, branching, iteration, and functions. Prerequisite: MATH 11010 or MATH 12001 with a minimum grade of C (2.000).",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "2",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "13012",
         "CourseShortTitle": "CS IB OBJECT ORIENTED PROG",
         "CourseLongTitle": "CS IB OBJECT ORIENTED PROG",
         "CourseDescription": "Computer science concepts including algorithm development and problem solving strategies focused on programming abstractions. High-level programming concepts including introduction to recursion and an introduction to object oriented-concepts. Prerequisite: CS 13011 with a minimum grade of C (2.000).",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "2",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "13401",
         "CourseShortTitle": "USER LEVEL COMPUTER SECURITY",
         "CourseLongTitle": "USER LEVEL COMPUTER SECURITY",
         "CourseDescription": "Introduction to computer and network safety; detection and removal of viruses, detection and defense against spyware and rootkits, firewall description and use, protection mechanisms against computer system hacking, spam, identity theft and phishing, protecting wireless networks, safe computing. Includes many in-lecture tutorials. Prerequisite: none.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "19995",
         "CourseShortTitle": "ST IN COMPUTER SCIENCE",
         "CourseLongTitle": "ST IN COMPUTER SCIENCE",
         "CourseDescription": "(Repeatable for credit)Special topics from all areas of computer science.Prerequisite: Permission.",
         "CourseEffectiveDate": "200801",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "1",
         "CourseCreditMaximumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "23001",
         "CourseShortTitle": "CS II DATA STRUCTURES",
         "CourseLongTitle": "CS II DATA STRUCTURES",
         "CourseDescription": "Computer science concepts and problem solving focusing on data structure and abstraction. Object-oriented concepts and programming including encapsulation, information hiding, object design, generics, polymorphism and an introduction to inheritance. Dynamic memory structures including dynamic arrays, pointers, linked-lists and the use of recursion for problem solving. Abstract data types including stacks, queues, lists, trees and graphs. Prerequisite: CS 13001 or CS 13012 with a minimum grade of C (2.000). Corequisite: CS 23022.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "4",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "23022",
             "CourseShortTitle": "DISCRETE STRUCTURES FOR CS",
         "CourseLongTitle": "DISCRETE STRUCTURES FOR CS",
         "CourseDescription": "(Cross-listed with MATH 23022) Discrete structures for computer scientists with a focus on: mathematical reasoning, combinatorial analysis, discrete structures, algorithmic thinking, applications and modeling. Specific topics include logic, sets, functions, relations, algorithms, proof techniques, counting, graphs, trees, Boolean algebra, grammars and languages. Prerequisite:minimum grade of C (2.000) in MATH 11009 or 11010.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "27101",
         "CourseShortTitle": "INTRO TO WEB INTERFACE DESIGN",
         "CourseLongTitle": "INTRO TO WEB INTERFACE DESIGN",
         "CourseDescription": "Introduction to principles for the design and implementation of user-centered website interfaces, website interface evaluation, human computer interaction, effective data organization and manipulation and tools for website creation. Prerequisite: none.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "29995",
         "CourseShortTitle": "ST IN COMPUTER SCIENCE",
         "CourseLongTitle": "ST IN COMPUTER SCIENCE",
         "CourseDescription": "(Repeatable for credit)Special topics from all areas of computer science. Prerequisite: Permission.",
         "CourseEffectiveDate": "200801",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "1",
         "CourseCreditMaximumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33006",
         "CourseShortTitle": "SOCIAL AND ETHICAL ISSUES",
         "CourseLongTitle": "SOCIAL AND ETHICAL ISSUES",
         "CourseDescription": "Social issues, including historical and social context, professional responsibilities, risks and liabilities and intellectual property. Prerequisite: C (2.000) or better in CS 13001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33007",
         "CourseShortTitle": "INTRO TO DATABASE SYS DESIGN",
         "CourseLongTitle": "INTRO TO DATABASE SYS DESIGN",
         "CourseDescription": "An introduction to the basic theoretical aspects of database systems, file organization, search methodologies, language design and performance evaluation techniques, initial modeling concepts and their use in hierarchical, network, relational and object-oriented database designs. Prerequisite: minimum grade of C (2.000) in CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33011",
         "CourseShortTitle": "SPEED PROGRAMMING TECHNIQUES",
         "CourseLongTitle": "SPEED PROGRAMMING TECHNIQUES",
         "CourseDescription": "Discussion and practice of pertinent aspects related to programming under time constraints. Prerequisite: CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33092",
         "CourseShortTitle": "SPEED PROGRAMMING PRACTICUM",
         "CourseLongTitle": "SPEED PROGRAMMING PRACTICUM",
         "CourseDescription": "(Repeatable for credit)Practice of pertinent aspects from CS 3301. Prerequisite: CS 33011.",
         "CourseEffectiveDate": "201301",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "2",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33101",
         "CourseShortTitle": "STRUCT-PROGRAM LANGUAGE",
         "CourseLongTitle": "STRUCT-PROGRAM LANGUAGE",
         "CourseDescription": "Introduction to syntax, semantics, behavior and implementation issues in imperative, functional, logic and object-oriented languages; type theory, concurrency, data dependency, nondeterminism and internet languages. Prerequisite: C (2.000) or better in CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33192",
         "CourseShortTitle": "INTERNSHIP IN COMPUTER SCIENCE",
         "CourseLongTitle": "INTERNSHIP IN COMPUTER SCIENCE",
         "CourseDescription": "(Repeatable for credit for a maximum of 12 credit hours) Supervised work experience in computer science. Since this work will be outside the department a report and final presentation will be required; a site visit might also be necessary. Satisfactory/unsatisfactory (S/U) graded. Prerequisite: special approval.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "1",
         "CourseCreditMaximumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33211",
         "CourseShortTitle": "OPERATING SYSTEMS",
         "CourseLongTitle": "OPERATING SYSTEMS",
         "CourseDescription": "Introduction to operating systems, processes and threads, CPU scheduling, mutual exclusion and synchronization, deadlock, memory management, file systems, networking and distributed systems. Prerequisite: CS 23001 with a minimum grade of C (2.000). Pre or Co-requisite: CS 35101.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33223",
         "CourseShortTitle": "UNIX TOOLS",
         "CourseLongTitle": "UNIX TOOLS",
         "CourseDescription": "Course will cover UNIX operating system environment topics that will make the user more productive. Topics will include the user environment, shells, files, the file system, editors, scripting languages, document processing, processes, remote access and documentation. Prerequisite: CS 13001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "33901",
         "CourseShortTitle": "SOFTWARE ENGINEERING",
         "CourseLongTitle": "SOFTWARE ENGINEERING",
         "CourseDescription": "An introduction to software engineering concepts: life cycle models; modeling languages; requirements analysis; specification; design; testing; validation; project management and maintenance. Prerequisite: C (2.000) or better in CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "35101",
         "CourseShortTitle": "COMPUTER ARCHITECTURE",
         "CourseLongTitle": "COMPUTER ARCHITECTURE",
         "CourseDescription": "Functional overview of computer systems, interconnection of basic components, system performance measures, instruction set design, arithmetic logic unit, control unit, memory system, pipelining, interrupts and input-output. Prerequisite: CS 13001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "35201",
         "CourseShortTitle": "COMPUTER COMM NETWORKS",
         "CourseLongTitle": "COMPUTER COMM NETWORKS",
         "CourseDescription": "An introduction to net-centric systems, data communication protocols, network architectures, routing protocols, network management, congestion control, network security, compression techniques, mobile and wireless networks, and WWW as an example of a client-server system. Prerequisite: minimum grade of C (2.000) in CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "38101",
         "CourseShortTitle": "INTRO TO GAME PROGRAMMING",
         "CourseLongTitle": "INTRO TO GAME PROGRAMMING",
         "CourseDescription": "Game engine scripting, event driven and data driven programming, game engine data structures, basic game related graphics and AI concepts, a short game development project. Prerequisite: minimum grade of C (2.000) or better in CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "39995",
         "CourseShortTitle": "ST IN COMPUTER SCIENCE",
         "CourseLongTitle": "ST IN COMPUTER SCIENCE",
         "CourseDescription": "(Repeatable for credit)Special topics from all areas of computer science. Prerequisite: Permission.",
         "CourseEffectiveDate": "200801",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "1",
         "CourseCreditMaximumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "41038",
         "CourseShortTitle": "INTERMEDIATE LOGIC",
         "CourseLongTitle": "INTERMEDIATE LOGIC",
         "CourseDescription": "(Cross-listed with MATH 41038 and MATH 51038 and PHIL 41038 and PHIL 51038) A detailed, systematic study of symbolic logic for philosophy majors, mathematics majors, computer science majors, and anyone else interested in advanced study in logic. The aim of the course is twofold: first, to develop a facility in understanding and using symbolic logic for various purposes, and second, to understand and appreciate symbolic logic as an area of study in itself. Topics include the distinction between syntactic, object-level proofs and semantic, meta-level proofs, the distinction between axiomatic systems and natural deduction systems of object-level proofs, various systems of modal logic, and some non-classical logics. Prerequisite: None.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "41045",
         "CourseShortTitle": "METALOGIC",
         "CourseLongTitle": "METALOGIC",
         "CourseDescription": "(Slashed with CS 51045; Cross-listed with MATH 41045 and MATH 51045 and PHIL 41045 and PHIL 51045) A detailed, systematic study of metalogic for philosophy majors, mathematics\nmajors, computer science majors, and anyone else interested in advanced study in logic. Topics include the soundness and completeness of the propositional and predicate calculi, the decidablility of propositional calculus, the undecidability of predicate calculus, Gödel’s incompleteness proof for languages capable of expressing arithmetic, the co-extensionality of the set of general recursive functions, abacus computable functions, and Turing computable functions, and the philosophical motivations for the ChurchTuring Thesis that all computable functions are Turing computable. Prerequisite: PHIL 41038.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "42201",
         "CourseShortTitle": "INTRO NUMERICAL COMPUT I",
         "CourseLongTitle": "INTRO NUMERICAL COMPUT I",
         "CourseDescription": "An introduction to numerical methods and software for solving many common scientific computing problems. Linear systems, least-squares data fitting, nonlinear equations and systems and optimization problems. Prerequisite: MATH 12003; and MATH 21001 or MATH 32051; and CS 10061 or CS 13001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "42202",
         "CourseShortTitle": "INTRO NUMERICAL COMPUT II",
         "CourseLongTitle": "INTRO NUMERICAL COMPUT II",
         "CourseDescription": "(Cross-listed with CS 52202 and MATH 42202 and MATH 52202) A continuation of CS 42201. Topics include interpolation, numerical differentiation and integration, and numerical solution of ordinary differential equations. Prerequisite: MATH 32044 or MATH 32052; and MATH 42201 or CS 42201.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "43006",
         "CourseShortTitle": "THEORY OF OBJ-ORIENT PROG",
         "CourseLongTitle": "THEORY OF OBJ-ORIENT PROG",
         "CourseDescription": "(Cross-listed with CS 53006) In depth course on the theory and principles of object-based and object-oriented programming using a language such as C++. The course covers advanced topics in inheritance and interface planning, generic (type independent) programming, factors of polymorphism, structure and organization of class libraries and object oriented design principles. Prerequisite: CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "43111",
         "CourseShortTitle": "STRUCTURE OF COMPILERS",
         "CourseLongTitle": "STRUCTURE OF COMPILERS",
         "CourseDescription": "(Cross-listed with CS 53111) Techniques used to write compilers including lexical analysis, syntax analysis, syntax-directed translation, type checking, run-time environments, and intermediate code generation. Prerequisite: CS 35101 and 33101.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "43202",
         "CourseShortTitle": "SYSTEMS ADMINISTRATION",
         "CourseLongTitle": "SYSTEMS ADMINISTRATION",
         "CourseDescription": "(Cross-listed with CS 53202) The setting up and day-to-day administration of multiuser multitasking systems, such as the various versions of UNIX, together with the analysis of problems which can arise in these activities. Prerequisite: CS 33211.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "43203",
         "CourseShortTitle": "SYSTEMS PROGRAMMING",
         "CourseLongTitle": "SYSTEMS PROGRAMMING",
         "CourseDescription": "(Slashed with CS 53203) Implementation and maintenance of system programs, system utilities; command interpreters, editors, file maintenance programs, text processors. Interrupt handling. Device drivers. Prerequisite: CS 23001 with a minimum grade of C.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "43401",
         "CourseShortTitle": "SECURE PROGRAMMING",
         "CourseLongTitle": "SECURE PROGRAMMING",
         "CourseDescription": "Code vulnerabilities, static code analysis, error handling, secure I/O, race conditions and mediation, handling buffer and integer overflow, handling vulnerabilites in web and database programming, privacy and cryptography, random number generators. Prerequisites: C (2.000) or better in CS 23001 and junior standing.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "44001",
         "CourseShortTitle": "CS III PROGRAMMING PATTERNS",
         "CourseLongTitle": "CS III PROGRAMMING PATTERNS",
         "CourseDescription": "(Slashed with CS 54001) CS III Programming Patterns extends students' knowledge of object oriented programming, and improves their C++ programming skills. Specifically, it covers procedural and object-based programming, inheritance, polymorphism, popular design patterns, and generic programming. Prerequisite: CS 23001 with a minimum grade of C (2.000).",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "4",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "44105",
         "CourseShortTitle": "WEB PROGRAMMING I",
         "CourseLongTitle": "WEB PROGRAMMING I",
         "CourseDescription": "(Slashed with CS 54105) This course is the first of a two-course sequence on Web Programming covering from basic to advanced topics on Web Programming based on open standards and best practices. Topics covered include the HyperText Markup Language (HTML), specifying look and feel using Cascading Style Sheets (CSS), client side programming in Javascript, server side programming in PHP, and the Hypertext Transfer Protocol (HTTP). Prerequisite: CS 23001 with a minimum grade of C (2.000).",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "44106",
         "CourseShortTitle": "WEB PROGRAMMING II",
         "CourseLongTitle": "WEB PROGRAMMING II",
         "CourseDescription": "(Slashed with CS 54106) This course is the second of a two-course sequence on Web Programming covering advanced topics on Web Programming based on open standards and best practices. This is a project course exploring advanced aspects of Web programming. Topics covered include advanced server side programming in PHP; database driven websites; structured query language (SQL) and MySQL; E-commerce; web hosting using Apache, PHP and MySQL; basic and digest authentication; web security, encryption and digital certificates; Extensible Markup Language (XML) for the web, AJAX and web services; scalable vector graphics (SVG); mobile websites. Prerequisite: CS 44105.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "44201",
         "CourseShortTitle": "ARTIFICIAL INTELLIGENCE",
         "CourseLongTitle": "ARTIFICIAL INTELLIGENCE",
         "CourseDescription": "(Cross-listed with CS 54201) Examines goals, problems, concepts and methods of artificial intelligence, heuristic versus algorithmic methods, natural language comprehension, theorem proving. Prerequisite: CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "44901",
         "CourseShortTitle": "SOFTWARE DEVELOPMENT PROJECT",
         "CourseLongTitle": "SOFTWARE DEVELOPMENT PROJECT",
         "CourseDescription": "With the supervision of the instructor, students will work in teams to design and implement a realistic software project similar to projects they would encounter in the workplace. Prerequisites: CS 23001 with a minimum grade of C (2.000); and junior standing.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "4",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "45203",
         "CourseShortTitle": "COMPUTER NETWORK SECURITY",
         "CourseLongTitle": "COMPUTER NETWORK SECURITY",
         "CourseDescription": "(Cross-listed with CS 55203) Overview of network security including attacks and vulnerabilities and defense measures, secure network design, network and transport layers security, intrusion detection techniques, defense against denial of service attacks, network hardware, software, and applications attacks and their defense, security policies, legal and ethical issues in cyber and computer crimes. Prerequisite: CS 35201.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "45231",
         "CourseShortTitle": "INTERNET ENGINEERING",
         "CourseLongTitle": "INTERNET ENGINEERING",
         "CourseDescription": "Design fundamentals and working principles of internet systems at the IP layer and above. DNS, inter-domain routing, internet client server programming, application level protocols (HTTP, XML,etc.) web server architecture, browser internet security and multimedia serving. Prerequisite: CS 23001, 33211 and 35201.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
      {
         "CourseSubjectAbbreviation": "CS",
         "CourseNumber": "46101",
         "CourseShortTitle": "ALGORITHMS",
         "CourseLongTitle": "ALGORITHMS",
         "CourseDescription": "(Cross-listed with CS 56101) Introduction to algorithmic concepts, design and complexity analysis of algorithms, searching, sorting, graphs, geometric algebraic and parallel algorithms. Prerequisite: MATH 12003 and C (2.000) or better in CS 23001.",
         "CourseEffectiveDate": "201508",
         "CourseCreditBasis": "Regular",
         "CourseCreditUnits": "Semester",
         "CourseCreditMinimumValue": "3",
         "CourseLevel": {
            "CourseLevelCode": "UG",
            "CourseLevelDescription": "Undergraduate"
         }
      },
   ]
}
